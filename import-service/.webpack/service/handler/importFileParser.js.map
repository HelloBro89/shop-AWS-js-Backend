{"version":3,"file":"handler/importFileParser.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA,MAAM,gCAA4B;;;ACAlC,MAAM,mCAA4B;;;ACArB;;AACb;CAEA;;AAEO,MAAME,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AAC7C,QAAMC,EAAE,GAAG,IAAIJ,+BAAJ,CAAW;AAACM,IAAAA,MAAM,EAAE;AAAT,GAAX,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeC,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAsB,EAAlD;;AACA,MAAI;AAEA,UAAMQ,SAAS,GAAGR,KAAK,CAACS,MAAN,CAAa,CAAb,EAAgBR,EAAlC;AACA,UAAMS,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiBC,IAAhC;AACA,UAAMC,GAAG,GAAGL,SAAS,CAACM,MAAV,CAAiBD,GAA7B;AAEA,UAAME,MAAM,GAAG;AACXJ,MAAAA,MAAM,EAAED,MADG;AAEXM,MAAAA,GAAG,EAAEH;AAFM,KAAf;AAKA,UAAMI,QAAQ,GAAGhB,EAAE,CAACiB,SAAH,CAAaH,MAAb,EAAqBI,gBAArB,EAAjB;AAEAF,IAAAA,QAAQ,CAACG,IAAT,CAActB,6BAAG,EAAjB,EAEIuB,EAFJ,CAEO,MAFP,EAEgBC,IAAD,IAAU;AAClBlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAZ;AACH,KAJJ,EAKID,EALJ,CAKO,OALP,EAKgBE,GAAG,IAAI;AACnB,YAAM,IAAIC,KAAJ,CAAW,wBAAuBD,GAAI,EAAtC,CAAN;AACD,KAPH,EAQIF,EARJ,CAQO,KARP,EAQc,YAAY;AACnBjB,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAYK,MAAO,IAAGG,GAAI,EAAvC;AAEA,YAAMZ,EAAE,CAACwB,UAAH,CAAc;AACpBd,QAAAA,MAAM,EAAED,MADY;AAEpBgB,QAAAA,UAAU,EAAG,GAAEhB,MAAO,IAAGG,GAAI,EAFT;AAGpBG,QAAAA,GAAG,EAAEH,GAAG,CAACc,OAAJ,CAAY,UAAZ,EAAwB,QAAxB;AAHe,OAAd,EAIJC,OAJI,EAAN;AAMD,YAAM3B,EAAE,CAAC4B,YAAH,CAAgB;AACpBlB,QAAAA,MAAM,EAAED,MADY;AAEpBM,QAAAA,GAAG,EAAEH;AAFe,OAAhB,EAGHe,OAHG,EAAN;AAIAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEF,KAvBJ,EAbA,CAuCA;;AAKJ,WAAO;AACHyB,MAAAA,UAAU,EAAE,GADT;AAEHC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,4CAAoC;AAF7B,OAFN;AAMHC,MAAAA,IAAI,EAAE;AANH,KAAP;AASD,GArDC,CAqDA,OAAOC,KAAP,EAAc;AACZ7B,IAAAA,OAAO,CAACC,GAAR,CAAY4B,KAAZ;AACA,WAAO;AACLH,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,4CAAoC;AAF7B,OAFJ;AAMLC,MAAAA,IAAI,EAAE;AAND,KAAP;AAQH;AACF,CAnEM,C","sources":["webpack://import-service/webpack/bootstrap","webpack://import-service/webpack/runtime/compat get default export","webpack://import-service/webpack/runtime/define property getters","webpack://import-service/webpack/runtime/hasOwnProperty shorthand","webpack://import-service/webpack/runtime/make namespace object","webpack://import-service/external commonjs \"aws-sdk\"","webpack://import-service/external commonjs \"csv-parser\"","webpack://import-service/./handler/importFileParser.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"aws-sdk\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"csv-parser\");","'use strict';\r\nimport AWS from 'aws-sdk';\r\nimport csv from 'csv-parser';\r\n// const BUCKET = 'uploaded-product';\r\n\r\nexport const importFileParser = async (event) => {\r\n    const s3 = new AWS.S3({region: 'eu-west-1'});\r\n    console.log(`CHEKC EVENT: ${JSON.stringify(event)}`);\r\n    try {\r\n\r\n        const recordsS3 = event.Record[0].s3;\r\n        const BUCKET = recordsS3.Bucket.name;\r\n        const key = recordsS3.object.key;\r\n\r\n        const params = {\r\n            Bucket: BUCKET,\r\n            Key: key,\r\n        };\r\n\r\n        const s3Stream = s3.getObject(params).createReadStream();\r\n\r\n        s3Stream.pipe(csv())\r\n       \r\n           .on('data', (data) => {\r\n               console.log(data);\r\n           })\r\n           .on('error', err => {\r\n            throw new Error(`Reading file failed: ${err}`);\r\n          })\r\n           .on('end', async () => {\r\n               console.log(`Copy from ${BUCKET}/${key}`);\r\n\r\n               await s3.copyObject({\r\n               Bucket: BUCKET,\r\n               CopySource: `${BUCKET}/${key}`,\r\n               Key: key.replace('uploaded', 'parser')\r\n              }).promise();\r\n\r\n              await s3.deleteObject({\r\n                Bucket: BUCKET,\r\n                Key: key,\r\n              }).promise();\r\n              console.log('File was moved');\r\n\r\n           });\r\n\r\n         \r\n        // console.log(`Result: ${response}`);\r\n\r\n        \r\n   \r\n\r\n    return {\r\n        statusCode: 204,\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Credentials': true,\r\n        },\r\n        body: null\r\n      }\r\n\r\n  } catch (error) {\r\n      console.log(error);\r\n      return {\r\n        statusCode: 500,\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n          'Access-Control-Allow-Credentials': true,\r\n        },\r\n        body: null\r\n      }\r\n  }\r\n}"],"names":["AWS","csv","importFileParser","event","s3","S3","region","console","log","JSON","stringify","recordsS3","Record","BUCKET","Bucket","name","key","object","params","Key","s3Stream","getObject","createReadStream","pipe","on","data","err","Error","copyObject","CopySource","replace","promise","deleteObject","statusCode","headers","body","error"],"sourceRoot":""}