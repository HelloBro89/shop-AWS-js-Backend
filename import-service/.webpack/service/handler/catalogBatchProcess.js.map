{"version":3,"file":"handler/catalogBatchProcess.js","mappings":"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","sources":["webpack://import-service/webpack/bootstrap","webpack://import-service/webpack/runtime/compat get default export","webpack://import-service/webpack/runtime/define property getters","webpack://import-service/webpack/runtime/hasOwnProperty shorthand","webpack://import-service/webpack/runtime/make namespace object","webpack://import-service/external commonjs \"pg\"","webpack://import-service/./handler/connection/connection.js","webpack://import-service/./handler/catalogBatchProcess.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pg\");","import PG from 'pg';\r\nconst { Client } = PG;\r\n\r\nconst { PG_HOST, PG_PORT, PG_DATABASE, PG_USERNAME, PG_PASSWORD } = process.env;\r\n\r\nconst dbOptions = {\r\n   host: PG_HOST,\r\n   port: PG_PORT,\r\n   database: PG_DATABASE,\r\n   user: PG_USERNAME,\r\n   password: PG_PASSWORD,\r\n   ssl: {\r\n      rejectUnauthorized: false\r\n   },\r\n   connectionTimeoutMillis: 5000\r\n};\r\n\r\nexport {dbOptions, Client}","import { dbOptions, Client } from './connection/connection';\r\n\r\nexport const catalogBatchProcess = async (event) => {\r\n\r\n    const client = new Client(dbOptions);\r\n    await client.connect();\r\n\r\n    const items = await event.Records.map(({body}) => body );\r\n    \r\n\r\n    try {\r\n        for (let item of items) {\r\n            const { price, title, description, count } = JSON.parse(item);\r\n    \r\n            if (!price || !title || !description || !count) {\r\n                throw new ValidationError(`Product data is invalid`);\r\n            };\r\n\r\n            const addReqToProductDB = `insert into products (title, description, price ) values ('${title}', '${description}', ${price}) returning id`;\r\n            const resFromProductDB = await client.query(addReqToProductDB);\r\n            const primaryKeyID = resFromProductDB.rows[0].id;\r\n            const addReqToStockDB =  `insert into stocks (product_id, count ) values ('${primaryKeyID}', ${count})`;\r\n            await client.query(addReqToStockDB);\r\n\r\n            await client.query('COMMIT');\r\n    }\r\n\r\n    } catch (e) {\r\n        console.log(`*****E NAME: ${e.name}`);\r\n        await client.query('ROLLBACK');\r\n        if (e.name === 'ValidationError') {\r\n            console.log(\"*****Error SyntaxError: \", e);\r\n            return {\r\n                statusCode: 400,\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Credentials': true,\r\n            },\r\n            body: JSON.stringify({message: \"Product data is invalid\"}),\r\n        };\r\n        } else {\r\n            console.log(\"*****Error status 500: \", e);\r\n            return {\r\n                statusCode: 500,\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Credentials': true,\r\n                 },\r\n                 body: JSON.stringify({\r\n                 message: \"Unexpected error\"\r\n                }),\r\n            };\r\n        };\r\n    };\r\n};\r\n\r\n\r\n\r\n"],"names":["PG","Client","PG_HOST","PG_PORT","PG_DATABASE","PG_USERNAME","PG_PASSWORD","process","env","dbOptions","host","port","database","user","password","ssl","rejectUnauthorized","connectionTimeoutMillis","catalogBatchProcess","event","client","connect","items","Records","map","body","item","price","title","description","count","JSON","parse","ValidationError","addReqToProductDB","resFromProductDB","query","primaryKeyID","rows","id","addReqToStockDB","e","console","log","name","statusCode","headers","stringify","message"],"sourceRoot":""}