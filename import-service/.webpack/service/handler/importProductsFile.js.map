{"version":3,"file":"handler/importProductsFile.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA,MAAM,gCAA4B;;;ACArB;;AACb;AACA,MAAMC,MAAM,GAAG,kBAAf;AAEO,MAAMC,kBAAkB,GAAG,MAAOC,KAAP,IAAiB;AAEjD,QAAMC,EAAE,GAAG,IAAIJ,+BAAJ,CAAW;AAACM,IAAAA,MAAM,EAAE;AAAT,GAAX,CAAX;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,KAAK,CAACK,qBAAvB;;AAEA,MAAID,IAAI,CAACE,OAAL,CAAa,MAAb,KAAwB,CAAC,CAA7B,EAAiC;AAC/B,WAAO;AACLC,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,4CAAoC;AAF7B,OAFJ;AAMLC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,OAAO,EAAG;AADS,OAAf;AAND,KAAP;AAUD;;AAED,QAAMC,WAAW,GAAI,YAAWT,IAAK,EAArC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAcX,IAAK,EAAhC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgB,OAAOX,IAAK,EAAzC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBX,IAAI,CAACY,MAAO,EAA9C;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAEpB,MADK;AAEbqB,IAAAA,GAAG,EAAEN,WAFQ;AAGbO,IAAAA,OAAO,EAAE,EAHI;AAIbC,IAAAA,WAAW,EAAE;AAJA,GAAf;;AAOA,MAAI;AAEF,UAAMC,OAAO,GAAG,MAAM,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEtD,aAAOxB,EAAE,CAACyB,YAAH,CAAgB,WAAhB,EAA6BT,MAA7B,EAAqC,CAACU,KAAD,EAAQL,OAAR,KAAoB;AAEhE,YAAIK,KAAK,IAAI,CAACL,OAAd,EAAuB;AACnBG,UAAAA,MAAM,CAACE,KAAD,CAAN;AACH;;AACDH,QAAAA,OAAO,CAACF,OAAD,CAAP;AACC,OANM,CAAP;AAOD,KATqB,CAAtB;AAWAR,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBO,OAAQ,EAAvC;AAEA,WAAO;AACLf,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,4CAAoC;AAF7B,OAFJ;AAMLC,MAAAA,IAAI,EAAEa;AAND,KAAP;AASD,GAxBD,CAwBE,OAAOK,KAAP,EAAc;AACdb,IAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,WAAO;AACLpB,MAAAA,UAAU,EAAE,GADP;AAELC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,4CAAoC;AAF7B,OAFJ;AAMLC,MAAAA,IAAI,EAAE;AACJG,QAAAA,OAAO,EAAG;AADN;AAND,KAAP;AAUD;;AAAA;AACF,CAnEM,C","sources":["webpack://import-service/webpack/bootstrap","webpack://import-service/webpack/runtime/compat get default export","webpack://import-service/webpack/runtime/define property getters","webpack://import-service/webpack/runtime/hasOwnProperty shorthand","webpack://import-service/webpack/runtime/make namespace object","webpack://import-service/external commonjs \"aws-sdk\"","webpack://import-service/./handler/importProductsFile.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"aws-sdk\");","'use strict';\r\nimport AWS from 'aws-sdk';\r\nconst BUCKET = 'uploaded-product';\r\n\r\nexport const importProductsFile = async (event) => {\r\n\r\n  const s3 = new AWS.S3({region: 'eu-west-1'});\r\n  const { name } = event.queryStringParameters;\r\n\r\n  if (name.indexOf('.csv') != -1 ) {\r\n    return {\r\n      statusCode: 400,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': true,\r\n      },\r\n      body: JSON.stringify({\r\n        message: `The file extension must be \"csv\"`\r\n     }),\r\n    }\r\n  }\r\n\r\n  const catalogPath = `uploaded/${name}`;\r\n  console.log(`CHECK NAME: ${name}`);\r\n  console.log(`CHECK TYPEOF: ${typeof name}`);\r\n  console.log(`CHECK NAME LENGTH: ${name.length}`);\r\n\r\n  const params = {\r\n    Bucket: BUCKET,\r\n    Key: catalogPath,\r\n    Expires: 60,\r\n    ContentType: 'text/csv'\r\n  };\r\n\r\n  try {\r\n\r\n    const signURL = await new Promise ((resolve, reject) => {\r\n\r\n      return s3.getSignedUrl('putObject', params, (error, signURL) => {\r\n        \r\n      if (error || !signURL) {\r\n          reject(error);\r\n      }\r\n      resolve(signURL);\r\n      });\r\n    })\r\n\r\n    console.log(`TEST CHECK URL: ${signURL}`);\r\n   \r\n    return {\r\n      statusCode: 200,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': true,\r\n      },\r\n      body: signURL\r\n    }\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      statusCode: 500,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': true,\r\n      },\r\n      body: {\r\n        message: `Unhandled error!!!`\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"names":["AWS","BUCKET","importProductsFile","event","s3","S3","region","name","queryStringParameters","indexOf","statusCode","headers","body","JSON","stringify","message","catalogPath","console","log","length","params","Bucket","Key","Expires","ContentType","signURL","Promise","resolve","reject","getSignedUrl","error"],"sourceRoot":""}